name: Testy Build

on:
  push:
    branches:
      - main

jobs:
  build-linux32:
    name: Build Linux 32-bit
    runs-on: ubuntu-latest
    env:
      TARGET: i686-unknown-linux-gnu
    steps:
    - uses: actions/checkout@v2
    - run: |
        rustup install nightly
        rustup default nightly
    - uses: actions-rs/toolchain@v1
      with:
        profile: default
        toolchain: nightly
    - run: cargo build --release
    - name: Generate CRC32 checksum
      run: echo "$(crc32 target/release/libtesty.so)" > artifact_crc.txt
    - uses: actions/upload-artifact@v2
      with:
        name: gmsv_testy_linux.dll
        path: target/release/libtesty.so
    - uses: actions/upload-artifact@v2
      with:
        name: gmsv_testy_linux.dll.txt
        path: artifact_crc.txt

  build-linux64:
    name: Build Linux 64-bit
    runs-on: ubuntu-latest
    env:
      TARGET: x86_64-unknown-linux-gnu
    steps:
    - uses: actions/checkout@v2
    - run: |
        rustup install nightly
        rustup default nightly
    - uses: actions-rs/toolchain@v1
      with:
        profile: default
        toolchain: nightly
    - run: cargo build --release
    - name: Generate CRC32 checksum
      run: echo "$(crc32 target/release/libtesty.so)" > artifact_crc.txt
    - uses: actions/upload-artifact@v2
      with:
        name: gmsv_testy_linux64.dll
        path: target/release/libtesty.so
    - uses: actions/upload-artifact@v2
      with:
        name: gmsv_testy_linux64.dll.txt
        path: artifact_crc.txt

  build-win64:
    name: Build Windows 64-bit
    runs-on: windows-latest
    env:
      TARGET: x86_64-pc-windows-msvc
    steps:
    - uses: actions/checkout@v2
    - run: |
        rustup install nightly
        rustup default nightly
    - uses: actions-rs/toolchain@v1
      with:
        profile: default
        toolchain: nightly
    - run: cargo build --release
    - name: Generate CRC32 checksum
      run: echo "$(crc32 target/release/testy.dll)" > artifact_crc.txt
    - uses: actions/upload-artifact@v2
      with:
        name: gmsv_testy_win64.dll
        path: target/release/testy.dll
    - uses: actions/upload-artifact@v2
      with:
        name: gmsv_testy_win64.dll.txt
        path: artifact_crc.txt

  build-win32:
    name: Build Windows 32-bit
    runs-on: windows-latest
    env:
      TARGET: i686-pc-windows-msvc
    steps:
    - uses: actions/checkout@v2
    - run: |
        rustup install nightly
        rustup default nightly
    - uses: actions-rs/toolchain@v1
      with:
        profile: default
        toolchain: nightly
    - run: cargo build --release
    - name: Generate CRC32 checksum
      run: echo "$(crc32 target/release/testy.dll)" > artifact_crc.txt
    - uses: actions/upload-artifact@v2
      with:
        name: gmsv_testy_win32.dll
        path: target/release/testy.dll
    - uses: actions/upload-artifact@v2
      with:
        name: gmsv_testy_win32.dll.txt
        path: artifact_crc.txt
